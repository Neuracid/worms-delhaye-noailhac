#! /bin/bash

MAIN_DIR=$PWD

if [ "$1" == "-h" ]; then
  echo "Ce script prÃ©pare la compilation"
  exit 2
fi

rm -rf build
rm -rf bin

mkdir -p lib
mkdir -p build

rm src/*.h

dia2code -d src/ worms.dia -cl src/sf -v

if [ "$1" == "clean" ]; then
    rm -rf build bin extern/libmicrohttpd extern/libmicrohttpd-0.9.46 extern/jsoncpp-0.10.5
    exit 2
fi

# jsoncpp
if [ ! -d "$MAIN_DIR/extern/jsoncpp-0.10.5" ]; then
    cd "$MAIN_DIR/extern" || exit 2
    tar -xzf jsoncpp-0.10.5.tar.gz || exit 2
    cd jsoncpp-0.10.5 || exit 2
    python amalgamate.py || exit 2
fi

# libmicrohttpd
if [ ! -d "$MAIN_DIR/extern/libmicrohttpd" ]; then
   cd "$MAIN_DIR/extern" || exit 2
   tar -xzf libmicrohttpd-0.9.46.tar.gz || exit 2
   cd libmicrohttpd-0.9.46 || exit 2
   ./configure --prefix="$MAIN_DIR/extern/libmicrohttpd" || exit 2
   make -j5 install || exit 2
fi

echo "" > src/sf.h

OS=`uname -a`

if [[ $OS == *"Darwin"* ]]
then
	echo -e "[\x1B[01;32m  ok\x1B[0m ] mac os"
	echo -e "Y to install SFML: "
	read QUESTION
	if [[ $QUESTION == 'Y' ]]
	then
		cd lib
		git clone https://github.com/SFML/SFML.git || echo "failed to clone SFML"
		cd ./SFML/
		cmake ./
		make
		sudo make install
		cd ..
		cd ..
	fi
fi

if [[ $OS == *"debian"* ]]||[[ $OS == *"Debian"* ]]
then
	echo -e "[\x1B[01;32m  ok\x1B[0m ] debian"
	SFML=`dpkg-query -W -f='${Status} ${Version}\n' libsfml-dev 2>/dev/null`
	if [[ $SFML == *"install ok installed"* ]]
	then
		echo -e "[\x1B[01;32m  ok\x1B[0m ] libsfml"
	else
		echo -e "[\x1B[01;31m no\x1B[0m ] libsfml"
		echo -e "\tlibsfml is not present to install enter the following command:"
		echo -e "\t\tsudo apt-get install libsfml-dev"
		exit
	fi
fi

if [[ $OS == *"ubuntu"* ]]||[[ $OS == *"Ubuntu"* ]]
then
	echo -e "[\x1B[01;32m  ok\x1B[0m ] ubuntu"
	SFML=`dpkg-query -W -f='${Status} ${Version}\n' libsfml-dev 2>/dev/null`
	if [[ $SFML == *"install ok installed"* ]]
	then
		echo -e "[\x1B[01;32m  ok\x1B[0m ] libsfml"
	else
		echo -e "[\x1B[01;31m no\x1B[0m ] libsfml"
		echo -e "\tlibsfml is not present to install enter the following command:"
		echo -e "\t\tsudo apt-get install libsfml-dev"
		exit
	fi
fi

if [[ $OS == *"kali"* ]]||[[ $OS == *"Kali"* ]]
then
	echo -e "[\x1B[01;32m  ok\x1B[0m ] kali"
	SFML=`dpkg-query -W -f='${Status} ${Version}\n' libsfml-dev 2>/dev/null`
	if [[ $SFML == *"install ok installed"* ]]
	then
		echo -e "[\x1B[01;32m  ok\x1B[0m ] libsfml"
	else
		echo -e "[\x1B[01;31m no\x1B[0m ] libsfml"
		echo -e "\tlibsfml is not present to install enter the following command:"
		echo -e "\t\tsudo apt-get install libsfml-dev"
		exit
	fi
fi

cd build
cmake ..
